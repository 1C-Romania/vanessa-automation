//начало текста модуля
&НаКлиенте
Перем юТест;

&НаКлиенте
Перем Контекст Экспорт;
&НаКлиенте
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить("Снипет",Снипет);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ПредставлениеТеста",ПредставлениеТеста);
	Структура.Вставить("Транзакция",Транзакция);
	Структура.Вставить("Параметр",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	юТест = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрылНовыйСеансTestClientИлиПодключилУжеСуществующий()","ЯОткрылНовыйСеансTestClientИлиПодключилУжеСуществующий","Я открыл новый сеанс TestClient или подключил уже существующий");
	ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрылВсеОкнаКлиентскогоПриложения()","ЯЗакрылВсеОкнаКлиентскогоПриложения","Я закрыл все окна клиентского приложения");
	ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюКнопкуКомандногоИнтерфейса(Парам01)","ЯНажимаюКнопкуКомандногоИнтерфейса","Я нажимаю кнопку командного интерфейса ""Основная""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ОткрылосьОкно(Парам01)","ОткрылосьОкно","открылось окно ""Справочник1""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам)","ВФормеВТаблицеЯПерехожуКСтроке","В форме ""Справочник1"" в таблице ""Список"" я перехожу к строке:");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТЧЯВыбираюТекущуюСтроку(Парам01,Парам02)","ВФормеВТЧЯВыбираюТекущуюСтроку","В форме ""Справочник1"" в ТЧ ""Список"" я выбираю текущую строку");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком(Парам01)","ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком","В открытой форме я открываю выпадающий список с заголовком ""Реквизит1""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеИзВыпадающегоСпискаЯВыбираю(Парам01)","ВОткрытойФормеИзВыпадающегоСпискаЯВыбираю","В открытой форме из выпадающего списка я выбираю ""ЗначениеПеречисления1""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(Парам01)","ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка","В открытой форме я выбираю значение реквизита с заголовком ""Реквизит2"" из формы списка");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(Парам01,Парам02)","ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст","В открытой форме в поле с заголовком ""Реквизит строка"" я ввожу текст ""тест""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯИзменяюФлагСЗаголовком(Парам01)","ВОткрытойФормеЯИзменяюФлагСЗаголовком","В открытой форме я изменяю флаг с заголовком ""Реквизит булево""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа(Парам01,Парам02)","ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа","В открытой форме я меняю значение переключателя с заголовком ""Реквизит переключатель"" на ""Первое значение""");
	
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком(Парам01,Парам02)","ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком","В открытой форме в ТЧ ""ТабличнаяЧасть1"" я нажимаю на кнопку с заголовком ""Добавить""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст","В открытой форме в ТЧ ""ТабличнаяЧасть1"" в поле с заголовком ""Реквизит число"" я ввожу текст ""54,00""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираю(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираю","В открытой форме в ТЧ ""ТабличнаяЧасть1"" из выпадающего списка с заголовком ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираюСВыбором(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираюСВыбором","В открытой форме в ТЧ ""ТабличнаяЧасть1"" из выпадающего списка с заголовком ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21"" с выбором");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯИзменяюФлагСЗаголовком(Парам01,Парам02)","ВОткрытойФормеВТЧЯИзменяюФлагСЗаголовком","В открытой форме в ТЧ ""ТабличнаяЧасть1"" я изменяю флаг с заголовком ""Реквизит булево""");
	
	ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(Парам01)","ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком","В открытой форме я нажимаю на кнопку с заголовком ""Записать и закрыть""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементСправочника1СИменемЗаписалсяКорректно(Парам01)","ЭлементСправочника1СИменемЗаписалсяКорректно","Элемент Справочника1 с именем ""Тестовый Элемент 1"" записался корректно");

	
	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
	УдалитьВсеЭлементыСправочникаВида("Справочник1");
	УдалитьВсеЭлементыСправочникаВида("Справочник2");
	Макет = ПолучитьМакетСервер("Fixtures");
	юТест.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры


&НаКлиенте
//Я открыл новый сеанс TestClient или подключил уже существующий
//@ЯОткрылНовыйСеансTestClientИлиПодключилУжеСуществующий()
Процедура ЯОткрылНовыйСеансTestClientИлиПодключилУжеСуществующий() Экспорт
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("txt");
	ИмяВременногоФайла = "c:\temp\111.txt";
	Если НЕ юТест.ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующий("/out""" + ИмяВременногоФайла + """") Тогда
		ВызватьИсключение "Не смог подключить TestClient!";
	КонецЕсли;	 
КонецПроцедуры


&НаСервереБезконтекста
Процедура УдалитьВсеЭлементыСправочникаВида(ИмяСпр)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочник1.Ссылка
		|ИЗ
		|	Справочник.Справочник1 КАК Справочник1";
		
		
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"Справочник1",ИмяСпр);	
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбъектСпр = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ОбъектСпр.Удалить();
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетСервер(ИмяМакета);
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
	
КонецФункции


&НаКлиенте
//Я закрыл все окна клиентского приложения
//@ЯЗакрылВсеОкнаКлиентскогоПриложения()
Процедура ЯЗакрылВсеОкнаКлиентскогоПриложения() Экспорт
	ОкнаПриложения = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
	//ютест.ПосмотретьЗначение(Окна,Истина);
	Для каждого ОкноПриложение Из ОкнаПриложения Цикл
		Если ОкноПриложение.Основное Тогда
			Продолжить;
		КонецЕсли;	 
		
		Попытка
			ОкноПриложение.Закрыть();
		Исключение
			Сообщить("Не смог закрыть окно " + ОкноПриложение);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
//Я нажимаю кнопку командного интерфейса "Основная"
//@ЯНажимаюКнопкуКомандногоИнтерфейса(Парам01)
Процедура ЯНажимаюКнопкуКомандногоИнтерфейса(ИмяКнопки) Экспорт
	ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ГлавноеОкноТестируемого.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ОкноПриложенияОсновноеCommandInterface;
	КнопкаКомандногоИнтерфейса = ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), ИмяКнопки,,10);
	КнопкаКомандногоИнтерфейса.Нажать();
КонецПроцедуры

&НаКлиенте
//открылось окно "Справочник1"
//@ОткрылосьОкно(Парам01)
Процедура ОткрылосьОкно(ИмяОкна) Экспорт
	АктивноеОкно = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяОкна, , 20);
	Контекст.Вставить("АктивноеОкно",АктивноеОкно);
КонецПроцедуры

&НаКлиенте
//В форме "Справочник1" в таблице "Список" я перехожу к строке:
//@ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам)
Процедура ВФормеВТаблицеЯПерехожуКСтроке(ИмяФормы,ИмяТЧ,ТабПарам) Экспорт
	юТест.ПроверитьРавенство(ТабПарам.Количество(),2,"Строка должна быть описана таблицей с двумя строками.");
	
	ОкноПриложения = Контекст.АктивноеОкно;
	НужнаяФорма    = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяФормы);
	ТаблицаСписок  = НужнаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), ИмяТЧ);
	ОписаниеСтроки = Новый Соответствие();
	
	
	Строка1    = ТабПарам[0];
	Строка2    = ТабПарам[1];
	КолКолонок = Строка1.Количество();
	
	Для Ккк = 1 По КолКолонок Цикл
		Ключ     = Строка1["Кол"+Ккк];
		Значение = Строка2["Кол"+Ккк];
		
		//Сообщить("" + Ключ + ":" + Значение);
		
		ОписаниеСтроки.Вставить(Ключ,Значение);
	КонецЦикла;
	
	//ОписаниеСтроки.Вставить("Код", "000000001");
	//ОписаниеСтроки.Вставить("Наименование", "Тестовый Элемент 2");
	
	ТаблицаСписок.ПерейтиКСтроке(ОписаниеСтроки, Вычислить("НаправлениеПереходаКСтроке.Вниз"));
	
КонецПроцедуры

&НаКлиенте
//"В форме "Справочник1" в ТЧ "Список" я выбираю текущую строку"
//@ВФормеВТЧЯВыбираюТекущуюСтроку(Парам01,Парам02)
Процедура ВФормеВТЧЯВыбираюТекущуюСтроку(ИмяФормы,ИмяТЧ) Экспорт
	ОкноПриложения = Контекст.АктивноеОкно;
	НужнаяФорма    = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"), ИмяФормы);
	ТаблицаСписок  = НужнаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), ИмяТЧ);
	ТаблицаСписок.Выбрать();
КонецПроцедуры

&НаКлиенте
//В открытой форме я открываю выпадающий список с заголовком "Реквизит1"
//@ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком(ИмяРеквизита) Экспорт
	ОкноПриложения = Контекст.АктивноеОкно;
	//Сообщить("ОкноПриложения.Заголовок = " + ОкноПриложения.Заголовок);
	
	//ОкноПриложенияТестовыйЭлементСправочник1ФормаТестовыйЭлементСправочник1 = ОкноПриложенияТестовыйЭлементСправочник1.НайтиОбъект(Тип("ТестируемаяФорма"), "Тестовый Элемент * (Справочник1)");
	ТекущаяФорма            = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ТекущийВыпадающийСписок = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),ИмяРеквизита);
	ТекущийВыпадающийСписок.Активизировать();

	ТекущийВыпадающийСписок.ОткрытьВыпадающийСписок();
	Контекст.Вставить("ТекущийВыпадающийСписок",ТекущийВыпадающийСписок);

КонецПроцедуры

&НаКлиенте
//В открытой форме из выпадающего списка я выбираю "ЗначениеПеречисления1"
//@ВОткрытойФормеИзВыпадающегоСпискаЯВыбираю(Парам01)
Процедура ВОткрытойФормеИзВыпадающегоСпискаЯВыбираю(ВыбираемоеЗначение) Экспорт
	ТекущийВыпадающийСписок = Контекст.ТекущийВыпадающийСписок;
	ТекущийВыпадающийСписок.ВыполнитьВыборИзСпискаВыбора(ВыбираемоеЗначение);
КонецПроцедуры

&НаКлиенте
//В открытой форме я выбираю значение реквизита с заголовком "Реквизит2" из формы списка
//@ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(Парам01)
Процедура ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(ИмяРеквизита) Экспорт

	ОкноПриложения = Контекст.АктивноеОкно;
	//Сообщить("ОкноПриложения.Заголовок = " + ОкноПриложения.Заголовок);
	
	ТекущаяФорма            = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ТекущийВыпадающийСписок = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),ИмяРеквизита);
	ТекущийВыпадающийСписок.Активизировать();
	
	ТекущийВыпадающийСписок.Выбрать();
	
КонецПроцедуры


&НаКлиенте
//В открытой форме в поле с заголовком "Реквизит строка" я ввожу текст "тест"
//@ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(Парам01,Парам02)
Процедура ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(ИмяРеквизита,Текст) Экспорт

	ОкноПриложения         = Контекст.АктивноеОкно;
	ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ПолеРеквизит           = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	ПолеРеквизит.Активизировать();
	ПолеРеквизит.ВвестиТекст(Текст);
	//КнопкаЗаписатьИЗакрыть = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),ИмяКнопки);
	//КнопкаЗаписатьИЗакрыть.Нажать();
	
КонецПроцедуры



&НаКлиенте
//В открытой форме я нажимаю на кнопку с заголовком "Записать и закрыть"
//@ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(ИмяКнопки) Экспорт

	ОкноПриложения         = Контекст.АктивноеОкно;
	ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	КнопкаЗаписатьИЗакрыть = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),ИмяКнопки);
	КнопкаЗаписатьИЗакрыть.Нажать();
	
КонецПроцедуры


Функция ЭлементСправочника1СИменемЗаписалсяКорректноСервер(Наименование)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочник1.Ссылка
		|ИЗ
		|	Справочник.Справочник1 КАК Справочник1
		|ГДЕ
		|	Справочник1.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;	 
	
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		Если Ссылка.Реквизит1 <> Перечисления.Перечисление1.ЗначениеПеречисления1 Тогда
			Сообщить("Реквизит1: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если Ссылка.Реквизит2 <> Справочники.Справочник2.НайтиПоНаименованию("ТестовыйЭлемент21") Тогда
			Сообщить("Реквизит2: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если Ссылка.РеквизитЧисло <> 12.34 Тогда
			Сообщить("РеквизитЧисло: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если Ссылка.РеквизитДата <> '19810408' Тогда
			Сообщить("РеквизитДата: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если СокрЛП(Ссылка.РеквизитСтрока) <> "тест" Тогда
			Сообщить("РеквизитСтрока: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если НЕ Ссылка.РеквизитБулево Тогда
			Сообщить("РеквизитБулево: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если Ссылка.РеквизитПереключатель <> 1 Тогда
			Сообщить("РеквизитПереключатель: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	
		
		СтрокаТЧ = Ссылка.ТабличнаяЧасть1[0];
		
		Если СтрокаТЧ.РеквизитЧисло <> 56.78 Тогда
			Сообщить("ТЧ Реквизит1: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если СокрЛП(СтрокаТЧ.РеквизитСтрока) <> "ТестСтрока" Тогда
			Сообщить("ТЧ РеквизитСтрока: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если СтрокаТЧ.РеквизитДата <> '19830911' Тогда
			Сообщить("ТЧ РеквизитДата: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если СтрокаТЧ.РеквизитСправочник <> Справочники.Справочник2.НайтиПоНаименованию("ТестовыйЭлемент21") Тогда
			Сообщить("ТЧ РеквизитСправочник: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если НЕ СтрокаТЧ.РеквизитБулево Тогда
			Сообщить("ТЧ РеквизитБулево: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Истина;
КонецФункции	

&НаКлиенте
//Элемент Справочника1 с именем "Тестовый Элемент 1" записался корректно
//@ЭлементСправочника1СИменемЗаписалсяКорректно(Парам01)
Процедура ЭлементСправочника1СИменемЗаписалсяКорректно(Наименование) Экспорт
	юТест.ПроверитьРавенство(ЭлементСправочника1СИменемЗаписалсяКорректноСервер(Наименование),Истина,"Записался корректный элемент.");
КонецПроцедуры


&НаКлиенте
//В открытой форме я изменяю флаг с заголовком "Реквизит булево"
//@ВОткрытойФормеЯИзменяюФлагСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯИзменяюФлагСЗаголовком(ИмяРеквизита) Экспорт
	ОкноПриложения         = Контекст.АктивноеОкно;
	ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ПолеРеквизит           = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	ПолеРеквизит.Активизировать();
	ПолеРеквизит.УстановитьОтметку();
КонецПроцедуры


&НаКлиенте
//В открытой форме я меняю значение переключателя с заголовком "Реквизит переключатель" на "Первое значение"
//@ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа(Парам01,Парам02)
Процедура ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа(ИмяРеквизита,Значение) Экспорт
	ОкноПриложения         = Контекст.АктивноеОкно;
	ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ПолеРеквизит           = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	ПолеРеквизит.Активизировать();
	ПолеРеквизит.ВыбратьВариант(Значение);
КонецПроцедуры


&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я нажимаю на кнопку с заголовком "Добавить"
//@ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком(ИмяТЧ,ИмяКнопки) Экспорт
	ОкноПриложения         = Контекст.АктивноеОкно;
	ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	Кнопка                 = ТЧ.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), ИмяКнопки);
	Кнопка.Нажать();
	
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" в поле с заголовком "Реквизит число" я ввожу текст "54,00"
//@ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст(ИмяТЧ,ИмяРеквизита,Текст) Экспорт
	ОкноПриложения         = Контекст.АктивноеОкно;
	ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	ПолеРеквизит.Активизировать();
	ПолеРеквизит.ВвестиТекст(Текст);
	
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" из выпадающего списка с заголовком "Реквизит справочник" я выбираю "ТестовыйЭлемент21"
//@ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираю(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираю(ИмяТЧ,ИмяРеквизита,ВыбираемоеЗначение) Экспорт
	ОкноПриложения         = Контекст.АктивноеОкно;
	ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	ПолеРеквизит.Активизировать();
	//ПолеРеквизит.ВвестиТекст(Текст);
	
	ПолеРеквизит.ВыполнитьВыборИзСпискаВыбора(ВыбираемоеЗначение);
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" из выпадающего списка с заголовком "Реквизит справочник" я выбираю "ТестовыйЭлемент21" с выбором
//@ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираюСВыбором(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираюСВыбором(ИмяТЧ,ИмяРеквизита,ВыбираемоеЗначение) Экспорт
	ОкноПриложения         = Контекст.АктивноеОкно;
	ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	ПолеРеквизит.Активизировать();
	//ПолеРеквизит.ВвестиТекст(Текст);
	
	ПолеРеквизит.Выбрать();
	ПолеРеквизит.ОжидатьФормированияВыпадающегоСписка();
	ПолеРеквизит.ВыполнитьВыборИзСпискаВыбора(ВыбираемоеЗначение);
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я изменяю флаг с заголовком "Реквизит булево"
//@ВОткрытойФормеВТЧЯИзменяюФлагСЗаголовком(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯИзменяюФлагСЗаголовком(ИмяТЧ,ИмяРеквизита) Экспорт
	ОкноПриложения         = Контекст.АктивноеОкно;
	ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	ПолеРеквизит.Активизировать();
	ПолеРеквизит.УстановитьОтметку();
КонецПроцедуры

//окончание текста модуля
