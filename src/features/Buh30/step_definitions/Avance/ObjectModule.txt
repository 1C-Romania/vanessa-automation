
Процедура Подождать(Парам = 800)
	
	ПромДат = ТекущаяУниверсальнаяДатаВМиллисекундах() + Парам;
	//ПромДат = ТекущаяДата() + Парам;
	Пока ТекущаяУниверсальнаяДатаВМиллисекундах() < ПромДат Цикл
		Продолжить;
	КонецЦикла;
КонецПроцедуры

Процедура ПередНачаломСценария() Экспорт
	
	Если Контекст.Свойство("ТестируемоеПриложение") Тогда
		Возврат;
	КонецЕсли;	 
	
	Сообщить("Подключаю COMConnector...");
	COMConnector = Новый COMОбъект("V83.COMConnector");	
	СтрокаПодключения = "File=""E:\Bases\Бух30"";Usr=""Абдулов (директор)"";"; 
	ComСоединение = COMConnector.Connect(СтрокаПодключения);

	Контекст.Вставить("ComСоединение",ComСоединение);
	Сообщить("COMConnector готово.");
	
	
	
	
	
	Сообщить("Запускаю тестируемый сеанс 1С...");
	Стр = """C:\Program Files (x86)\1cv8\8.3.6.1760\bin\1cv8.exe"" ENTERPRISE /FE:\Bases\Бух30 /N""Абдулов (директор)"" /TESTCLIENT /RunModeManagedApplication";
	Сообщить(Стр);
	ЗапуститьПриложение(Стр);
	
	ТестируемоеПриложение = Новый ТестируемоеПриложение("localhost");
	
	// Пытаемся подключаться не более одной минуты
	
	ВремяОкончанияОжидания = ТекущаяДата() + 60;
	Подключен = Ложь;
	Пока Не ТекущаяДата() >= ВремяОкончанияОжидания Цикл
		Попытка
			ТестируемоеПриложение.УстановитьСоединение();
			Подключен = Истина;
			Прервать;
		Исключение
			
		КонецПопытки;
	КонецЦикла;
	
	
	Если Не Подключен Тогда
		// Завершаем работу теста
		ТестируемоеПриложение = Неопределено;
		Сообщить("Не удалось установить соединение!");
		Возврат;
	КонецЕсли;	
	
	Сообщить("Подключен=" + Подключен);
	
	
	Контекст.Вставить("ТестируемоеПриложение",ТестируемоеПриложение);
	Сообщить("Тестируемый сеанс 1С готово.");
КонецПроцедуры

Процедура ПередОкончаниемСценария() Экспорт
	Контекст = "";
КонецПроцедуры

//есть Конфигурация 'Бухгалтерия 3.0 (Такси)'
//@ЕстьКонфигурация(Парам01Строка)
Процедура ЕстьКонфигурация(Парам01Строка) Экспорт
	ТестируемоеПриложение = Контекст.ТестируемоеПриложение;
	
	Сообщить("Ищу главное окно.");
	ГлавноеОкноТестКлиента = ТестируемоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"),"Демонстрационная база*",,30);
	
	Сообщить("Пытаюсь активизировать гланое окно.");
	ГлавноеОкноТестКлиента.Активизировать();
	Контекст.Вставить("ГлавноеОкноТестКлиента",ГлавноеОкноТестКлиента);
КонецПроцедуры


Процедура УдалитьВсехКонтрагентовСТакимИменемИИхДоговора(ИмяКонтрагента)
	ComСоединение = Контекст.ComСоединение;
	
	//удалим созданные предыдущими тестами договоры - начало
	Запрос = ComСоединение.NewObject("Запрос");
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Наименование", ИмяКонтрагента);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить("Удаляю договор " + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		ДоговорОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ДоговорОбъект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами договоры - конец
	
	
	
	
	//удалим созданные предыдущими тестами контрагентов - начало
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Наименование", ИмяКонтрагента);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить("Удаляю контрагента " + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		КонтрагентОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		КонтрагентОбъект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами контрагентов - начало
КонецПроцедуры


//существует Контрагент 'тестовый Контрагент'
//@СуществуетКонтрагент(Парам01Строка)
Процедура СуществуетКонтрагент(ИмяКонтрагента) Экспорт
	
	Если Контекст.Свойство("Контрагент") Тогда
		Возврат;
	КонецЕсли;	 
	
	УдалитьВсехКонтрагентовСТакимИменемИИхДоговора(ИмяКонтрагента);
	УдалитьДокументыОказанияУслуг(ИмяКонтрагента);
	
	
	
	
	ГлавноеОкноТестКлиента = Контекст.ГлавноеОкноТестКлиента;
	ТестируемоеПриложение  = Контекст.ТестируемоеПриложение;
	
	Подождать();
	ГлавноеОкноТестКлиента.ВыполнитьКоманду("e1cib/list/Справочник.Контрагенты");
	
	Подождать();
	ГлавноеОкноТестКлиента.ВыполнитьКоманду("e1cib/command/Справочник.Контрагенты.Команда.Создать");
	
	ФормаКонтрагента = ТестируемоеПриложение.НайтиОбъект(Тип("ТестируемаяФорма"), "Контрагент (создание)*");
	
	Подождать();
	Поле = ФормаКонтрагента.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Наименование");
	Поле.Активизировать();	
	
	Подождать();
	Поле.ВвестиТекст(ИмяКонтрагента);
	
	Подождать();
	КнопкаЗаписатьИЗакрыть = ФормаКонтрагента.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Записать");
	КнопкаЗаписатьИЗакрыть.Нажать();	
	
	Контекст.Вставить("Контрагент","");
КонецПроцедуры

//существует договор 'тестовый договор Контрагента 1' с датой договора 01.01.2014
//@СуществуетДоговорСДатойДоговора(Парам01Строка,Парам02Дата)
Процедура СуществуетДоговорСДатойДоговора(ИмяДоговора,ДатаДоговора) Экспорт
	
	Если Контекст.Свойство("Договор") Тогда
		Возврат;
	КонецЕсли;	 
	
	ТестовоеПриложение = Контекст.ТестируемоеПриложение;
	
	Подождать();
	Если Контекст.Свойство("ОкноПриложенияТестовыйКонтрагентКонтрагент") Тогда
		ОкноПриложенияТестовыйКонтрагентКонтрагент = Контекст.ОкноПриложенияТестовыйКонтрагентКонтрагент;
	Иначе	
		ОкноПриложенияТестовыйКонтрагентКонтрагент = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "тестовый Контрагент (Контрагент)", , 30);
		Контекст.Вставить("ОкноПриложенияТестовыйКонтрагентКонтрагент",ОкноПриложенияТестовыйКонтрагентКонтрагент);
	КонецЕсли;	 
	
	
	ОкноПриложенияТестовыйКонтрагентКонтрагент.Активизировать();
	
	Подождать();
	ОкноПриложенияТестовыйКонтрагентКонтрагентCommandInterface = ОкноПриложенияТестовыйКонтрагентКонтрагент.ПолучитьКомандныйИнтерфейс();
	КнопкаКомандногоИнтерфейсаДоговоры = ОкноПриложенияТестовыйКонтрагентКонтрагентCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), "Договоры");
	Подождать();
	КнопкаКомандногоИнтерфейсаДоговоры.Нажать();

	Подождать();
	ОкноПриложенияТестовыйКонтрагентКонтрагентФормаДоговоры = ОкноПриложенияТестовыйКонтрагентКонтрагент.НайтиОбъект(Тип("ТестируемаяФорма"), "Договоры");
	КнопкаСоздать = ОкноПриложенияТестовыйКонтрагентКонтрагентФормаДоговоры.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Создать");
	Подождать();
	КнопкаСоздать.Нажать();
	
	
	ОкноПриложенияДоговорСоздание = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Договор (создание)", , 30);
	ОкноПриложенияДоговорСозданиеФормаДоговорСоздание = ОкноПриложенияДоговорСоздание.НайтиОбъект(Тип("ТестируемаяФорма"), "Договор (создание)");
	
	ПолеНомерДоговора = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Номер договора");
	Подождать();
	ПолеНомерДоговора.ВвестиТекст(ИмяДоговора);

	ПолеОт = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "от");
	Подождать();
	ПолеОт.Активизировать();

	//ПолеОт.Выбрать();
	Подождать();
	ПолеОт.ВвестиТекст(Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	//ПолеОт.Выбрать();

	
	ПолеНаименование = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Наименование");
	Подождать();
	ПолеНаименование.ВвестиТекст(ИмяДоговора);
	
	
	//ПолеВидДоговора = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Вид договора");
	//ПолеВидДоговора.Активизировать();
	//ПолеВидДоговора.Выбрать();
	//ПолеВидДоговора.ОжидатьФормированияВыпадающегоСписка();
	//ПолеВидДоговора.ВыполнитьВыборИзСпискаВыбора("С поставщиком");
	
	
	ПолеОрганизация = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Организация");
	Подождать();
	//ПолеОрганизация.Активизировать();
	//Подождать();
	ПолеОрганизация.Выбрать();
	ПолеОрганизация.ОжидатьФормированияВыпадающегоСписка();
	Подождать();
	ПолеОрганизация.ВыполнитьВыборИзСпискаВыбора("Андромеда ООО");

	ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.ПерейтиКСледующемуЭлементу();

	ПолеКомментарий = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Комментарий");
	ПолеКомментарий.Активизировать();

	Подождать();
	ПолеКомментарий.ВвестиТекст(ИмяДоговора);

	КнопкаЗаписать = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Записать и закрыть");
	Подождать();
	КнопкаЗаписать.Нажать();
	
	
	Контекст.Вставить("Договор","");
	
КонецПроцедуры





Процедура СозданиеУслуги(ТестовоеПриложение,ИмяУслуги)

	
	ОкноПриложенияОсновное = Неопределено;
	КлиентсткиеОкнаТестируемогоПриложения = ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
	Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
		Если ТестируемоеОкно.Основное Тогда
			ОкноПриложенияОсновное = ТестируемоеОкно;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	//ОкноПриложенияОсновноеCommandInterface = ОкноПриложенияОсновное.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterfaceКнопкаКомандногоИнтерфейсаНоменклатура = ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), "Номенклатура");
	//ОкноПриложенияОсновноеCommandInterfaceКнопкаКомандногоИнтерфейсаНоменклатура.Нажать();

	
	ОкноПриложенияОсновное.ВыполнитьКоманду("e1cib/list/Справочник.Номенклатура");
	
	ОкноПриложенияНоменклатура = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Номенклатура", , 30);
	ОкноПриложенияНоменклатураФормаНоменклатура = ОкноПриложенияНоменклатура.НайтиОбъект(Тип("ТестируемаяФорма"), "Номенклатура");
	Подождать();
	ОкноПриложенияНоменклатураФормаНоменклатура.Активизировать();

	ОкноПриложенияНоменклатураФормаНоменклатураКнопкаСоздать = ОкноПриложенияНоменклатураФормаНоменклатура.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Создать");
	Подождать();
	ОкноПриложенияНоменклатураФормаНоменклатураКнопкаСоздать.Нажать();

	ОкноПриложенияНоменклатураСоздание = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Номенклатура (создание)", , 30);
	ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСоздание = ОкноПриложенияНоменклатураСоздание.НайтиОбъект(Тип("ТестируемаяФорма"), "Номенклатура (создание)");
	ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСозданиеПолеНаименование = ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Наименование");
	Подождать();
	ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСозданиеПолеНаименование.ВвестиТекст(ИмяУслуги);

	ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСозданиеПолеВходитВГруппу = ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Входит в группу");
	Подождать();
	ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСозданиеПолеВходитВГруппу.Активизировать();

	ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСозданиеПолеВходитВГруппу.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСозданиеПолеВходитВГруппу.ВыполнитьВыборИзСпискаВыбора("Услуги");

	ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСозданиеКнопкаЗаписатьИЗакрыть = ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСоздание.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Записать и закрыть");
	Подождать();
	ОкноПриложенияНоменклатураСозданиеФормаНоменклатураСозданиеКнопкаЗаписатьИЗакрыть.Нажать();

КонецПроцедуры





Процедура УдалитьРанееСозданныеУслугиСпр(Наим)
	ComСоединение = Контекст.ComСоединение;
	
	//удалим созданные предыдущими тестами договоры - начало
	Запрос = ComСоединение.NewObject("Запрос");
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Наименование", Наим);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить("Удаляю договор " + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Объект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами договоры - конец
	
КонецПроцедуры


//существует услуга 'тестовая услуга 1'
//@СуществуетУслуга(Парам01Строка)
Процедура СуществуетУслуга(ИмяУслуги) Экспорт
	
	Если Контекст.Свойство("Услуга") Тогда
		Возврат;
	КонецЕсли;	 
	
	УдалитьРанееСозданныеУслугиСпр(ИмяУслуги);
	
	ТестовоеПриложение = Контекст.ТестируемоеПриложение;
	СозданиеУслуги(ТестовоеПриложение,ИмяУслуги);
	
	
	Контекст.Вставить("Услуга","");

КонецПроцедуры









Процедура СозданиеОказаниеУслуги(ТестовоеПриложение,ИмяУслуги,Сумма,ДатаДок)

	
	ОкноПриложенияОсновное = Неопределено;
	КлиентсткиеОкнаТестируемогоПриложения = ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
	Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
		Если ТестируемоеОкно.Основное Тогда
			ОкноПриложенияОсновное = ТестируемоеОкно;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	//ОкноПриложенияОсновноеCommandInterface = ОкноПриложенияОсновное.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterfaceКнопкаКомандногоИнтерфейсаРеализацияТоваровИУслуг = ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), "Реализация товаров и услуг");
	//ОкноПриложенияОсновноеCommandInterfaceКнопкаКомандногоИнтерфейсаРеализацияТоваровИУслуг.Нажать();

	
	ОкноПриложенияОсновное.ВыполнитьКоманду("e1cib/list/Документ.РеализацияТоваровУслуг");
	//e1cib/list/Документ.РеализацияТоваровУслуг
	
	ОкноПриложенияРеализацияТоваровИУслуг = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Реализация товаров и услуг", , 30);
	ОкноПриложенияРеализацияТоваровИУслугФормаРеализацияТоваровИУслуг = ОкноПриложенияРеализацияТоваровИУслуг.НайтиОбъект(Тип("ТестируемаяФорма"), "Реализация товаров и услуг");
	ОкноПриложенияРеализацияТоваровИУслугФормаРеализацияТоваровИУслугКнопкаУслугиПростаяФорма = ОкноПриложенияРеализацияТоваровИУслугФормаРеализацияТоваровИУслуг.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Услуги (простая форма)");
	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугФормаРеализацияТоваровИУслугКнопкаУслугиПростаяФорма.Нажать();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслуги = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Реализация товаров и услуг (создание) (Услуги)", , 30);
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемаяФорма"), "Реализация товаров и услуг (создание) (Услуги)");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеКонтрагент = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Контрагент");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеКонтрагент.Активизировать();

	
	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугАН00000002ОтУслугиФормаРеализацияТоваровИУслугАН00000002ОтУслугиПолеОт = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "от");
	ОкноПриложенияРеализацияТоваровИУслугАН00000002ОтУслугиФормаРеализацияТоваровИУслугАН00000002ОтУслугиПолеОт.ВвестиТекст(Формат(ДатаДок,"ДФ=ddMMyyyy"));
	
	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеКонтрагент.ВвестиТекст("тесто");

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеКонтрагент.ОжидатьФормированияВыпадающегоСписка();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеКонтрагент.ВыполнитьВыборИзСпискаВыбора("тестовый Контрагент (00-000056)");

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСчетНаОплату = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Счет на оплату");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСчетНаОплату.Активизировать();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеОрганизация = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Организация");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеОрганизация.Активизировать();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеОрганизация.Выбрать();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеОрганизация.ВвестиТекст("анд");

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеОрганизация.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеОрганизация.ВыполнитьВыборИзСпискаВыбора("Андромеда ООО (00-000002)");

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиТаблицаУслуги = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Услуги");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиТаблицаУслуги.Активизировать();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеДоговор = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Договор");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеДоговор.Активизировать();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеДоговор.ВвестиТекст("тесто");

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеДоговор.ОжидатьФормированияВыпадающегоСписка();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеДоговор.ВыполнитьВыборИзСпискаВыбора("тестовый договор Контрагента 1 (00-000127)");

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСчетНаОплату = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Счет на оплату");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСчетНаОплату.Активизировать();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиТаблицаУслуги = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Услуги");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиКнопкаДобавить = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Добавить");
	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиКнопкаДобавить.Нажать();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеНоменклатура = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Номенклатура");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеНоменклатура.ВвестиТекст(ИмяУслуги);

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеНоменклатура.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеНоменклатура.ВыполнитьВыборИзСпискаВыбора("тестовая услуга 1 (00-00000208)");

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиТаблицаУслуги.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСодержаниеУслуги = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Содержание услуги");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСодержаниеУслуги.Активизировать();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиТаблицаУслуги.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеКоличество = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Количество");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеКоличество.Активизировать();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеКоличество.ВвестиТекст("1,000");

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиТаблицаУслуги.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеЦена = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Цена");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеЦена.Активизировать();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеЦена.ВвестиТекст(Строка(Сумма));

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиТаблицаУслуги.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСумма = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Сумма");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСумма.Активизировать();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиТаблицаУслуги.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСчетаУчета = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Счета учета");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиПолеСчетаУчета.Активизировать();

	Подождать();
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиТаблицаУслуги.ЗакончитьРедактированиеСтроки(false);

	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиКнопкаПровестиИЗакрыть = ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслуги.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Провести и закрыть");
	ОкноПриложенияРеализацияТоваровИУслугСозданиеУслугиФормаРеализацияТоваровИУслугСозданиеУслугиКнопкаПровестиИЗакрыть.Нажать();

КонецПроцедуры


Процедура УдалитьДокументыОказанияУслуг(Наим)
	ComСоединение = Контекст.ComСоединение;
	
	//удалим созданные предыдущими тестами договоры - начало
	Запрос = ComСоединение.NewObject("Запрос");
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Дата >= &Дата";

	Запрос.УстановитьПараметр("Дата", '20140101');

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить("Удаляю договор " + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Объект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами договоры - конец
КонецПроцедуры


//существует Документ 'РеализацияТоваровИУслуг1' от 01.01.2014  по контрагенту 'тестовый Контрагент' по договору 'тестовый договор Контрагента 1' по услуге 'тестовая услуга 1' на сумму 1000 руб.
//@СуществуетДокументОтПоКонтрагентуПоДоговоруПоУслугеНаСуммуРуб(Парам01Строка,Парам02Дата,Парам03Строка,Парам04Строка,Парам05Строка,Парам06Число)
Процедура СуществуетДокументОтПоКонтрагентуПоДоговоруПоУслугеНаСуммуРуб(ИмяДокумента,ДатаДок,ИмяКонтрагента,ИмяДоговора,ИмяУслуги,Сумма) Экспорт
	
	Если Контекст.Свойство("ОказаниеУслуги") Тогда
		Возврат;
	КонецЕсли;	 
	
	ТестовоеПриложение = Контекст.ТестируемоеПриложение;
	СозданиеОказаниеУслуги(ТестовоеПриложение,ИмяУслуги,Сумма,ДатаДок);
	
	Если Сумма = 300 Тогда
		Контекст.Вставить("ОказаниеУслуги","");
	КонецЕсли;	 

КонецПроцедуры

//Введена учетная политика
//@ВведенаУчетнаяПолитика()
Процедура ВведенаУчетнаяПолитика() Экспорт
	
КонецПроцедуры

//'тестовый Контрагент' хочет оплатить сумму 1100 руб.
//@ХочетОплатитьСуммуРуб(Парам01Строка,Парам02Число)
Процедура ХочетОплатитьСуммуРуб(Парам01Строка,Парам02Число) Экспорт
	
КонецПроцедуры









Процедура СоздатьОплату(ТестовоеПриложение,ИмяКонтрагента,ИмяДоговорва,Сумма)

	
	ОкноПриложенияОсновное = Неопределено;
	КлиентсткиеОкнаТестируемогоПриложения = ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
	Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
		Если ТестируемоеОкно.Основное Тогда
			ОкноПриложенияОсновное = ТестируемоеОкно;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	//ОкноПриложенияОсновноеCommandInterface = ОкноПриложенияОсновное.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterfaceКнопкаКомандногоИнтерфейсаБанкИКасса = ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), "Банк и касса");
	//ОкноПриложенияОсновноеCommandInterfaceКнопкаКомандногоИнтерфейсаБанкИКасса.Нажать();

	
	//ОкноПриложенияОсновноеCommandInterfaceКнопкаКомандногоИнтерфейсаБанковскиеВыписки = ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), "Банковские выписки");
	//ОкноПриложенияОсновноеCommandInterfaceКнопкаКомандногоИнтерфейсаБанковскиеВыписки.Нажать();

	
	ОкноПриложенияОсновное.ВыполнитьКоманду("e1cib/list/ЖурналДокументов.БанковскиеВыписки");
	
	ОкноПриложенияБанковскиеВыписки = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Банковские выписки", , 30);
	ОкноПриложенияБанковскиеВыпискиФормаБанковскиеВыписки = ОкноПриложенияБанковскиеВыписки.НайтиОбъект(Тип("ТестируемаяФорма"), "Банковские выписки");
	ОкноПриложенияБанковскиеВыпискиФормаБанковскиеВыпискиКнопкаПоступление = ОкноПриложенияБанковскиеВыпискиФормаБанковскиеВыписки.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Поступление");
	Подождать();
	ОкноПриложенияБанковскиеВыпискиФормаБанковскиеВыпискиКнопкаПоступление.Нажать();

	ОкноПриложенияПоступлениеНаРасчетныйСчетСоздание = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Поступление на расчетный счет (создание)", , 30);
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСоздание = ОкноПриложенияПоступлениеНаРасчетныйСчетСоздание.НайтиОбъект(Тип("ТестируемаяФорма"), "Поступление на расчетный счет (создание)");
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеПлательщик = ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Плательщик");
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеПлательщик.Активизировать();

	Подождать();
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеПлательщик.ВвестиТекст(ИмяКонтрагента);

	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеПлательщик.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеПлательщик.ВыполнитьВыборИзСпискаВыбора("тестовый Контрагент (00-000056)");

	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСоздание.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеСумма = ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Сумма");
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеСумма.Активизировать();

	Подождать();
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеСумма.ВвестиТекст(Строка(Сумма));

	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеОрганизация = ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Организация");
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеОрганизация.Активизировать();

	Подождать();
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеОрганизация.Выбрать();

	Подождать();
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеОрганизация.ВвестиТекст("андро");

	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеОрганизация.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеПолеОрганизация.ВыполнитьВыборИзСпискаВыбора("Андромеда ООО (00-000002)");

	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСоздание.ПерейтиКСледующемуЭлементу();

	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеТаблицаРасшифровкаПлатежа = ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСоздание.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "РасшифровкаПлатежа");
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеТаблицаРасшифровкаПлатежа.Активизировать();

	Подождать();
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеКнопкаПровестиИЗакрыть = ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСоздание.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Провести и закрыть");
	ОкноПриложенияПоступлениеНаРасчетныйСчетСозданиеФормаПоступлениеНаРасчетныйСчетСозданиеКнопкаПровестиИЗакрыть.Нажать();

КонецПроцедуры




Процедура УдалитьВсеОплаты()

	ComСоединение = Контекст.ComСоединение;
	
	//удалим созданные предыдущими тестами договоры - начало
	Запрос = ComСоединение.NewObject("Запрос");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеНаРасчетныйСчет.Ссылка
	|ИЗ
	|	Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
	|ГДЕ
	|	ПоступлениеНаРасчетныйСчет.Дата > &Дат";
	Запрос.УстановитьПараметр("Дат", '20140101');
	
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить("Удаляю договор " + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Объект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами договоры - конец
	

КонецПроцедуры


//фиксируется оплата по  'тестовый Контрагент' по договору 'тестовый договор Контрагента 1'  на сумму 1100 рублей
//@ФиксируетсяОплатаПоПоДоговоруНаСуммуРублей(Парам01Строка,Парам02Строка,Парам03Число)
Процедура ФиксируетсяОплатаПоПоДоговоруНаСуммуРублей(ИмяКонтрагента,ИмяДоговорва,Сумма) Экспорт
	
	УдалитьВсеОплаты();
	
	ТестовоеПриложение = Контекст.ТестируемоеПриложение;
	СоздатьОплату(ТестовоеПриложение,ИмяКонтрагента,ИмяДоговорва,Сумма);
КонецПроцедуры

//формируется проводка по счету '62.01' на сумму 1000, где 'субконто3' заполнено как Документ 'РеализацияТоваровИУслуг1' от 01.01.2014
//@ФормируетсяПроводкаПоСчетуНаСуммуГдеЗаполненоКакДокументОт(Парам01Строка,Парам02Число,Парам03Строка,Парам04Строка,Парам05Дата)
Процедура ФормируетсяПроводкаПоСчетуНаСуммуГдеЗаполненоКакДокументОт(Парам01Строка,Парам02Число,Парам03Строка,Парам04Строка,Парам05Дата) Экспорт
	
КонецПроцедуры

//на счете '62.01'  остается долг в размере 200 рублей по 'субконто3' Документ 'РеализацияТоваровИУслуг2' от 02.01.2014
//@НаСчетеОстаетсяДолгВРазмереРублейПоДокументОт(Парам01Строка,Парам02Число,Парам03Строка,Парам04Строка,Парам05Дата)
Процедура НаСчетеОстаетсяДолгВРазмереРублейПоДокументОт(Парам01Строка,Парам02Число,Парам03Строка,Парам04Строка,Парам05Дата) Экспорт
	
КонецПроцедуры

//формируется проводка аванса по счету '62.02' на сумму 700, где 'субконто3' заполнено как сам документ поступления оплаты
//@ФормируетсяПроводкаАвансаПоСчетуНаСуммуГдеЗаполненоКакСамДокументПоступленияОплаты(Парам01Строка,Парам02Число,Парам03Строка)
Процедура ФормируетсяПроводкаАвансаПоСчетуНаСуммуГдеЗаполненоКакСамДокументПоступленияОплаты(Парам01Строка,Парам02Число,Парам03Строка) Экспорт
	
КонецПроцедуры
