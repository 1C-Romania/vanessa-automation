&НаКлиенте
Перем юТест;
&НаКлиенте
Перем ИдетОтладка;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("Тест_должен_Сделать_Запуск_Тестов_По_ТестовойФиче_Когда_Нет_Исходников_EPF");
	
	Возврат ВсеТесты;
	
КонецФункции

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПутьКОбработке_vanessa_behavior_изПараметровЗапуска(ПутьК_vanessa_behavior,КаталогИнструментов,КаталогФич)
	ПутьК_vanessa_behavior = Неопределено;
КонецПроцедуры


&НаСервере
Функция ПодключитьВнешнююОбработку(АдресХранилища)
	Возврат ВнешниеОбработки.Подключить(АдресХранилища,,Ложь);    
КонецФункции


&НаКлиенте
Процедура ПроверитьЧтоВФичуПроставилсяТег(ПутьКФайлу)
	Файл = Новый Файл(ПутьКФайлу);
	Путь = Файл.Путь;
	Если Прав(Путь,1) = "\" Тогда
		Путь = Лев(Путь,СтрДлина(Путь)-1);
	КонецЕсли;	 
	ОжидаемоеИмяФичи = "@[ИмяФичи]=" + Файл.ИмяБезРасширения + ";" + Путь;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ПутьКФайлу,"UTF-8");
	
	
	
	Нашли = Ложь;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если НРег(Стр) = НРег(ОжидаемоеИмяФичи) Тогда
			Нашли = Истина;
			Прервать;
		КонецЕсли;	 
		
	КонецЦикла;
	Текст.Закрыть();
	
	юТест.ПроверитьРавенство(Нашли,Истина,"В фиче нашли нужный тег: " + ОжидаемоеИмяФичи);
	
КонецПроцедуры



&НаКлиенте
Процедура ЗаписатьФайлФичи(ИмяФайла)
	УдалитьФайлы(ИмяФайла);
	
	
	Стр = "# encoding: utf-8
	|# language: ru
	|
	|
	|@[ИмяФичи]=Test;\features\SelfTests
	|
	|
	|
	|
	|Функционал: Проверка генерации простого epf файла.
	|
	|Как Пользователь
	|Я Хочу: чтобы чтобы при нажатии на кнопку Выполнить в толстой форме происходила геренация epf файла
	|
	|Сценарий: Генерация EPF в режиме толстых форм
	| Когда Запущена сервисная база в режиме толстых форм
	| И создана процедура куда передано число 1
	| И создана процедура куда передана строка 'тест'
	| И создана процедура куда передана дата 08.04.1981
	| И не будет обнаружено число в конце слова3
	| И не будет обнаружено число в конце слова с тире-3
	| Тогда будет создан файл 'SimpleGenerateTest.epf'
	| 
	|";
	
	Текст = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.UTF8);
	Текст.ЗаписатьСтроку(Стр);
	Текст.Закрыть(); 
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетСервер(ИмяМакета)
	текОбъект = ЭтаФорма.РеквизитФормыВЗначение("Объект");
	Макет = текОбъект.ПолучитьМакет(ИмяМакета);
	Возврат Макет;
КонецФункции


&НаКлиенте
Процедура ОбработатьКаталогФич(КаталогФич)
	Файл = Новый Файл(КаталогФич);
	Если НЕ Файл.ЭтоКаталог() Тогда
		ВызватьИсключение "Для каталога фич должен быть передан каталог, а не файл!";
	КонецЕсли;	 
	
	Если Прав(КаталогФич,1) = "\" Тогда
		КаталогФич = Лев(КаталогФич,СтрДлина(КаталогФич)-1);
	КонецЕсли;	 
КонецПроцедуры


&НаКлиенте
Процедура Тест_должен_Сделать_Запуск_Тестов_По_ТестовойФиче_Когда_Нет_Исходников_EPF() Экспорт
	ПутьК_vanessa_behavior = "";
	КаталогИнструментов    = "";
	КаталогФич             = "";
	ПолучитьПутьКОбработке_vanessa_behavior_изПараметровЗапуска(ПутьК_vanessa_behavior,КаталогИнструментов,КаталогФич);
	
	Если ПутьК_vanessa_behavior = Неопределено Тогда
		Если Не ИдетОтладка Тогда
			Сообщить("Не передан путь к vanessa_behavior.epf!");
			ВызватьИсключение "Не передан путь к vanessa_behavior.epf!";
		КонецЕсли;	  
		
		ПутьК_vanessa_behavior = "E:\commons\Rep\vanessa-bdd\vanessa-behavior.epf";
		КаталогИнструментов    = "E:\commons\Rep\vanessa-bdd";
		КаталогФич             = "E:\Temp\feature";
	КонецЕсли;	 
	
	
	
	ОбработатьКаталогФич(КаталогФич);
	
	ПереданныйКаталог = КаталогФич;
	ТекущаяФича  = КаталогФич + "\Test.feature";
	
	
	ПутьКЛогуКукумбера = КаталогИнструментов + "\CucumberConsoleLog.txt";
	УдалитьФайлы(ПутьКЛогуКукумбера);
	
	
	
	
	
	Сообщить("Работаю с фичей: " + ТекущаяФича);
	
	ПутьКСгенерированномуEPF = ПереданныйКаталог + "\step_definitions\Test.epf";
	УдалитьФайлы(ПереданныйКаталог);
	СоздатьКаталог(ПереданныйКаталог);
	СоздатьКаталог(ПереданныйКаталог + "\step_definitions");
	
	
	ЗаписатьФайлФичи(ТекущаяФича);
	
	
	
	
	
	АдресХранилища = "";
	Результат = ПоместитьФайл(АдресХранилища, ПутьК_vanessa_behavior, ,Ложь);
	ИмяОбработки = ПодключитьВнешнююОбработку(АдресХранилища);
	
	
	
	
	МакетEPF = ПолучитьМакетСервер("EPF");
	МакетEPF.Записать(ПутьКСгенерированномуEPF);
	
	
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("TestRun",Истина);
	ДопПараметры.Вставить("КаталогИнструментов",КаталогИнструментов);
	ДопПараметры.Вставить("КаталогФич",ТекущаяФича);
	ДопПараметры.Вставить("ВыполнитьОбработкуПриОткрытии",Истина);
	ДопПараметры.Вставить("ЗакрытьФормуПослеВыполненияОбработки",Истина);
	
	Форма = ПолучитьФорму("ВнешняяОбработка." + ИмяОбработки + ".Форма.УправляемаяФорма");
	Форма.ПроставитьТегВФичу(ТекущаяФича);
	ОткрытьФормуМодально("ВнешняяОбработка." + ИмяОбработки + ".Форма.УправляемаяФорма",ДопПараметры);
	
	
	
	Файл = Новый Файл(ПутьКЛогуКукумбера);
	юТест.ПроверитьРавенство(Файл.Существует(),Истина,"Существует лог кукумбера.");
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ПутьКЛогуКукумбера,"UTF-8");
	
	Нашли = Ложь;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если Найти(Стр,"1 scenario (1 passed)") > 0 Тогда
			Нашли = Истина;
		КонецЕсли;	 
		
	КонецЦикла;	
	
	Текст.Закрыть();
	
	
	юТест.ПроверитьРавенство(Нашли,Истина,"В логе кукумбера нашли запись о прохождении сценария.");
	
КонецПроцедуры

ИдетОтладка = Ложь;
ИдетОтладка = Истина;

Если ИдетОтладка Тогда
	Сообщить("ИдетОтладка");
КонецЕсли;	









