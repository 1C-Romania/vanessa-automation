
Процедура ПередНачаломСценария() Экспорт
	Стр = """C:\Program Files (x86)\1cv8\8.3.6.1760\bin\1cv8.exe"" ENTERPRISE /FE:\Bases\Бух30 /N""Абдулов (директор)"" /TESTCLIENT /RunModeManagedApplication";
	Сообщить(Стр);
	ЗапуститьПриложение(Стр);
	
	ТестируемоеПриложение = Новый ТестируемоеПриложение("localhost");
	
	// Пытаемся подключаться не более одной минуты
	
	ВремяОкончанияОжидания = ТекущаяДата() + 60;
	
	Подключен = Ложь;
	
	Пока Не ТекущаяДата() >= ВремяОкончанияОжидания Цикл
		
		Попытка
			
			ТестируемоеПриложение.УстановитьСоединение();
			
			Подключен = Истина;
			
			Прервать;
			
		Исключение
			
		КонецПопытки;
		
		
	КонецЦикла;
	
	
	Если Не Подключен Тогда
		
		// Завершаем работу теста
		
		ТестируемоеПриложение = Неопределено;
		
		Сообщить("Не удалось установить соединение!");
		
		Возврат;
		
	КонецЕсли;	
	
	Сообщить("Подключен=" + Подключен);
	
	
	Контекст.Вставить("ТестируемоеПриложение",ТестируемоеПриложение);
КонецПроцедуры

Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

//есть Конфигурация 'Бухгалтерия 3.0 (Такси)'
//@ЕстьКонфигурация(Парам01Строка)
Процедура ЕстьКонфигурация(Парам01Строка) Экспорт
	ТестируемоеПриложение = Контекст.ТестируемоеПриложение;
	
	Сообщить("Ищу главное окно.");
	ГлавноеОкноТестКлиента = ТестируемоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"),"Демонстрационная база*",,20);
	
	Сообщить("Пытаюсь активизировать гланое окно.");
	ГлавноеОкноТестКлиента.Активизировать();
	Контекст.Вставить("ГлавноеОкноТестКлиента",ГлавноеОкноТестКлиента);
	
	
	
	//Заголовок = "";
	//ВремяОкончанияОжидания = ТекущаяДата() + 20;
	//ПолучилосьНайти = Ложь;
	//Пока Не ТекущаяДата() >= ВремяОкончанияОжидания Цикл
	//	Попытка
	//		Заголовок = ГлавноеОкноТестируемого.Заголовок;
	//		ПолучилосьНайти = Истина;
	//		Прервать;
	//	Исключение
	//		
	//	КонецПопытки;
	//КонецЦикла;
	//
	//Сообщить("ПолучилосьНайти = " + ПолучилосьНайти);
	//Сообщить("ГлавноеОкноТестируемого.Заголовок = " + Заголовок);
	//Если ПолучилосьНайти Тогда
	//	ГлавноеОкноТестируемого.Активизировать();
	//КонецЕсли;	 
	
    //Сообщить("ПолучилосьНайти=" + ПолучилосьНайти);
КонецПроцедуры

//существует Контрагент 'тестовый Контрагент'
//@СуществуетКонтрагент(Парам01Строка)
Процедура СуществуетКонтрагент(Парам01Строка) Экспорт
	ГлавноеОкноТестКлиента = Контекст.ГлавноеОкноТестКлиента;
	ТестируемоеПриложение  = Контекст.ТестируемоеПриложение;
	
	ГлавноеОкноТестКлиента.ВыполнитьКоманду("e1cib/list/Справочник.Контрагенты");
	ГлавноеОкноТестКлиента.ВыполнитьКоманду("e1cib/command/Справочник.Контрагенты.Команда.Создать");
	
	ФормаКонтрагента = ТестируемоеПриложение.НайтиОбъект(Тип("ТестируемаяФорма"), "Контрагент (создание)*");
	
	Поле = ФормаКонтрагента.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Наименование");
	Поле.Активизировать();	
	
	Поле.ВвестиТекст(Парам01Строка);
	
	КнопкаЗаписатьИЗакрыть = ФормаКонтрагента.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Записать и закрыть");
	КнопкаЗаписатьИЗакрыть.Нажать();	
КонецПроцедуры

//существует договор 'тестовый договор Контрагента 1' с датой договора 02.01.2014
//@СуществуетДоговорСДатойДоговора(Парам01Строка,Парам02Дата)
Процедура СуществуетДоговорСДатойДоговора(Парам01Строка,Парам02Дата) Экспорт
	
КонецПроцедуры

//Введена учетная политика
//@ВведенаУчетнаяПолитика()
Процедура ВведенаУчетнаяПолитика() Экспорт
	
КонецПроцедуры

//'тестовый Контрагент' имеет 2 покупки по 2 'тестовым договорам' на сумму 1000 и 300 рублей
//@ИмеетПокупкиПоНаСуммуИРублей(Парам01Строка,Парам02Число,Парам03Число,Парам04Строка,Парам05Число,Парам06Число)
Процедура ИмеетПокупкиПоНаСуммуИРублей(Парам01Строка,Парам02Число,Парам03Число,Парам04Строка,Парам05Число,Парам06Число) Экспорт
	
КонецПроцедуры

//фиксируется оплата по  'тестовому Контрагенту' на сумму 1100 рублей
//@ФиксируетсяОплатаПоНаСуммуРублей(Парам01Строка,Парам02Число)
Процедура ФиксируетсяОплатаПоНаСуммуРублей(Парам01Строка,Парам02Число) Экспорт
	
КонецПроцедуры

//формируется проводка по счету '62.01' по 'тестовый договор Контрагента 1' на сумму 1000
//@ФормируетсяПроводкаПоСчетуПоНаСумму(Парам01Строка,Парам02Строка,Парам03Число)
Процедура ФормируетсяПроводкаПоСчетуПоНаСумму(Парам01Строка,Парам02Строка,Парам03Число) Экспорт
	
КонецПроцедуры

//на счете '62.01' по  'тестовый договор Контрагента 2'  остается долг в размере 200 рублей
//@НаСчетеПоОстаетсяДолгВРазмереРублей(Парам01Строка,Парам02Строка,Парам03Число)
Процедура НаСчетеПоОстаетсяДолгВРазмереРублей(Парам01Строка,Парам02Строка,Парам03Число) Экспорт
	
КонецПроцедуры
