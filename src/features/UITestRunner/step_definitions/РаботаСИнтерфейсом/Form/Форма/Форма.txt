//начало текста модуля
&НаКлиенте
Перем юТест;

&НаКлиенте
Перем Контекст Экспорт;
&НаКлиенте
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить("Снипет",Снипет);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ПредставлениеТеста",ПредставлениеТеста);
	Структура.Вставить("Транзакция",Транзакция);
	Структура.Вставить("Параметр",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	юТест = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрылВсеОкнаКлиентскогоПриложения()","ЯЗакрылВсеОкнаКлиентскогоПриложения","Я закрыл все окна клиентского приложения");
	ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюКнопкуКомандногоИнтерфейса(Парам01)","ЯНажимаюКнопкуКомандногоИнтерфейса","Я нажимаю кнопку командного интерфейса ""Основная""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ОткрылосьОкно(Парам01)","ОткрылосьОкно","открылось окно ""Справочник1""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам)","ВФормеВТаблицеЯПерехожуКСтроке","В форме ""Справочник1"" в таблице ""Список"" я перехожу к строке:");

	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
	УдалитьВсеЭлементыСправочникаВида("Справочник1");
	Макет = ПолучитьМакетСервер("Fixtures");
	юТест.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры


&НаСервереБезконтекста
Процедура УдалитьВсеЭлементыСправочникаВида(ИмяСпр)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочник1.Ссылка
		|ИЗ
		|	Справочник.Справочник1 КАК Справочник1";
		
		
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"Справочник1",ИмяСпр);	
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбъектСпр = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ОбъектСпр.Удалить();
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетСервер(ИмяМакета);
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
	
КонецФункции


&НаКлиенте
//Я закрыл все окна клиентского приложения
//@ЯЗакрылВсеОкнаКлиентскогоПриложения()
Процедура ЯЗакрылВсеОкнаКлиентскогоПриложения() Экспорт
	ОкнаПриложения = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
	//ютест.ПосмотретьЗначение(Окна,Истина);
	Для каждого ОкноПриложение Из ОкнаПриложения Цикл
		Если ОкноПриложение.Основное Тогда
			Продолжить;
		КонецЕсли;	 
		
		Попытка
			ОкноПриложение.Закрыть();
		Исключение
			Сообщить("Не смог закрыть окно " + ОкноПриложение);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
//Я нажимаю кнопку командного интерфейса "Основная"
//@ЯНажимаюКнопкуКомандногоИнтерфейса(Парам01)
Процедура ЯНажимаюКнопкуКомандногоИнтерфейса(ИмяКнопки) Экспорт
	ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ГлавноеОкноТестируемого.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ОкноПриложенияОсновноеCommandInterface;
	КнопкаКомандногоИнтерфейса = ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), ИмяКнопки,,10);
	КнопкаКомандногоИнтерфейса.Нажать();
КонецПроцедуры

&НаКлиенте
//открылось окно "Справочник1"
//@ОткрылосьОкно(Парам01)
Процедура ОткрылосьОкно(ИмяОкна) Экспорт
	ОкноПриложенияСправочник1 = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяОкна, , 20);
КонецПроцедуры

&НаКлиенте
//В форме "Справочник1" в таблице "Список" я перехожу к строке:
//@ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам)
Процедура ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам) Экспорт
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры
