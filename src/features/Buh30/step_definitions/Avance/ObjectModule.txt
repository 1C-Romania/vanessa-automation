
Процедура Подождать(Парам = 500)
	
	ПромДат = ТекущаяУниверсальнаяДатаВМиллисекундах() + Парам;
	//ПромДат = ТекущаяДата() + Парам;
	Пока ТекущаяУниверсальнаяДатаВМиллисекундах() < ПромДат Цикл
		Продолжить;
	КонецЦикла;
КонецПроцедуры


Процедура ПередНачаломСценария() Экспорт
	
	Сообщить("Подключаю COMConnector...");
	COMConnector = Новый COMОбъект("V83.COMConnector");	
	СтрокаПодключения = "File=""E:\Bases\Бух30"";Usr=""Абдулов (директор)"";"; 
	ComСоединение = COMConnector.Connect(СтрокаПодключения);

	Контекст.Вставить("ComСоединение",ComСоединение);
	Сообщить("COMConnector готово.");
	
	
	
	
	
	Сообщить("Запускаю тестируемый сеанс 1С...");
	Стр = """C:\Program Files (x86)\1cv8\8.3.6.1760\bin\1cv8.exe"" ENTERPRISE /FE:\Bases\Бух30 /N""Абдулов (директор)"" /TESTCLIENT /RunModeManagedApplication";
	Сообщить(Стр);
	ЗапуститьПриложение(Стр);
	
	ТестируемоеПриложение = Новый ТестируемоеПриложение("localhost");
	
	// Пытаемся подключаться не более одной минуты
	
	ВремяОкончанияОжидания = ТекущаяДата() + 60;
	Подключен = Ложь;
	Пока Не ТекущаяДата() >= ВремяОкончанияОжидания Цикл
		Попытка
			ТестируемоеПриложение.УстановитьСоединение();
			Подключен = Истина;
			Прервать;
		Исключение
			
		КонецПопытки;
	КонецЦикла;
	
	
	Если Не Подключен Тогда
		// Завершаем работу теста
		ТестируемоеПриложение = Неопределено;
		Сообщить("Не удалось установить соединение!");
		Возврат;
	КонецЕсли;	
	
	Сообщить("Подключен=" + Подключен);
	
	
	Контекст.Вставить("ТестируемоеПриложение",ТестируемоеПриложение);
	Сообщить("Тестируемый сеанс 1С готово.");
КонецПроцедуры

Процедура ПередОкончаниемСценария() Экспорт
	Контекст = "";
КонецПроцедуры

//есть Конфигурация 'Бухгалтерия 3.0 (Такси)'
//@ЕстьКонфигурация(Парам01Строка)
Процедура ЕстьКонфигурация(Парам01Строка) Экспорт
	ТестируемоеПриложение = Контекст.ТестируемоеПриложение;
	
	Сообщить("Ищу главное окно.");
	ГлавноеОкноТестКлиента = ТестируемоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"),"Демонстрационная база*",,30);
	
	Сообщить("Пытаюсь активизировать гланое окно.");
	ГлавноеОкноТестКлиента.Активизировать();
	Контекст.Вставить("ГлавноеОкноТестКлиента",ГлавноеОкноТестКлиента);
	
	
	
	//Заголовок = "";
	//ВремяОкончанияОжидания = ТекущаяДата() + 20;
	//ПолучилосьНайти = Ложь;
	//Пока Не ТекущаяДата() >= ВремяОкончанияОжидания Цикл
	//	Попытка
	//		Заголовок = ГлавноеОкноТестируемого.Заголовок;
	//		ПолучилосьНайти = Истина;
	//		Прервать;
	//	Исключение
	//		
	//	КонецПопытки;
	//КонецЦикла;
	//
	//Сообщить("ПолучилосьНайти = " + ПолучилосьНайти);
	//Сообщить("ГлавноеОкноТестируемого.Заголовок = " + Заголовок);
	//Если ПолучилосьНайти Тогда
	//	ГлавноеОкноТестируемого.Активизировать();
	//КонецЕсли;	 
	
    //Сообщить("ПолучилосьНайти=" + ПолучилосьНайти);
КонецПроцедуры

Процедура УдалитьВсехКонтрагентовСТакимИменемИИхДоговора(ИмяКонтрагента)
	ComСоединение = Контекст.ComСоединение;
	
	//удалим созданные предыдущими тестами договоры - начало
	Запрос = ComСоединение.NewObject("Запрос");
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Наименование", ИмяКонтрагента);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить("Удаляю договор " + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		ДоговорОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ДоговорОбъект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами договоры - конец
	
	
	
	
	//удалим созданные предыдущими тестами контрагентов - начало
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Наименование", ИмяКонтрагента);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить("Удаляю контрагента " + ВыборкаДетальныеЗаписи.Ссылка.Наименование);
		КонтрагентОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		КонтрагентОбъект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами контрагентов - начало
КонецПроцедуры


//существует Контрагент 'тестовый Контрагент'
//@СуществуетКонтрагент(Парам01Строка)
Процедура СуществуетКонтрагент(ИмяКонтрагента) Экспорт
	
	УдалитьВсехКонтрагентовСТакимИменемИИхДоговора(ИмяКонтрагента);
	
	
	
	
	ГлавноеОкноТестКлиента = Контекст.ГлавноеОкноТестКлиента;
	ТестируемоеПриложение  = Контекст.ТестируемоеПриложение;
	
	Подождать();
	ГлавноеОкноТестКлиента.ВыполнитьКоманду("e1cib/list/Справочник.Контрагенты");
	
	Подождать();
	ГлавноеОкноТестКлиента.ВыполнитьКоманду("e1cib/command/Справочник.Контрагенты.Команда.Создать");
	
	ФормаКонтрагента = ТестируемоеПриложение.НайтиОбъект(Тип("ТестируемаяФорма"), "Контрагент (создание)*");
	
	Подождать();
	Поле = ФормаКонтрагента.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Наименование");
	Поле.Активизировать();	
	
	Подождать();
	Поле.ВвестиТекст(ИмяКонтрагента);
	
	Подождать();
	КнопкаЗаписатьИЗакрыть = ФормаКонтрагента.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Записать");
	КнопкаЗаписатьИЗакрыть.Нажать();	
КонецПроцедуры

//существует договор 'тестовый договор Контрагента 1' с датой договора 02.01.2014
//@СуществуетДоговорСДатойДоговора(Парам01Строка,Парам02Дата)
Процедура СуществуетДоговорСДатойДоговора(ИмяДоговора,ДатаДоговора) Экспорт
	ТестовоеПриложение = Контекст.ТестируемоеПриложение;
	
	Подождать();
	Если Контекст.Свойство("ОкноПриложенияТестовыйКонтрагентКонтрагент") Тогда
		ОкноПриложенияТестовыйКонтрагентКонтрагент = Контекст.ОкноПриложенияТестовыйКонтрагентКонтрагент;
	Иначе	
		ОкноПриложенияТестовыйКонтрагентКонтрагент = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "тестовый Контрагент (Контрагент)", , 30);
		Контекст.Вставить("ОкноПриложенияТестовыйКонтрагентКонтрагент",ОкноПриложенияТестовыйКонтрагентКонтрагент);
	КонецЕсли;	 
	
	
	ОкноПриложенияТестовыйКонтрагентКонтрагент.Активизировать();
	
	Подождать();
	ОкноПриложенияТестовыйКонтрагентКонтрагентCommandInterface = ОкноПриложенияТестовыйКонтрагентКонтрагент.ПолучитьКомандныйИнтерфейс();
	КнопкаКомандногоИнтерфейсаДоговоры = ОкноПриложенияТестовыйКонтрагентКонтрагентCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), "Договоры");
	Подождать();
	КнопкаКомандногоИнтерфейсаДоговоры.Нажать();

	Подождать();
	ОкноПриложенияТестовыйКонтрагентКонтрагентФормаДоговоры = ОкноПриложенияТестовыйКонтрагентКонтрагент.НайтиОбъект(Тип("ТестируемаяФорма"), "Договоры");
	КнопкаСоздать = ОкноПриложенияТестовыйКонтрагентКонтрагентФормаДоговоры.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Создать");
	Подождать();
	КнопкаСоздать.Нажать();
	
	
	ОкноПриложенияДоговорСоздание = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Договор (создание)", , 30);
	ОкноПриложенияДоговорСозданиеФормаДоговорСоздание = ОкноПриложенияДоговорСоздание.НайтиОбъект(Тип("ТестируемаяФорма"), "Договор (создание)");
	
	ПолеНомерДоговора = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Номер договора");
	Подождать();
	ПолеНомерДоговора.ВвестиТекст(ИмяДоговора);

	ПолеОт = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "от");
	Подождать();
	ПолеОт.Активизировать();

	//ПолеОт.Выбрать();
	Подождать();
	ПолеОт.ВвестиТекст(Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	//ПолеОт.Выбрать();

	
	ПолеНаименование = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Наименование");
	Подождать();
	ПолеНаименование.ВвестиТекст(ИмяДоговора);
	
	
	//ПолеВидДоговора = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Вид договора");
	//ПолеВидДоговора.Активизировать();
	//ПолеВидДоговора.Выбрать();
	//ПолеВидДоговора.ОжидатьФормированияВыпадающегоСписка();
	//ПолеВидДоговора.ВыполнитьВыборИзСпискаВыбора("С поставщиком");
	
	
	ПолеОрганизация = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Организация");
	Подождать();
	//ПолеОрганизация.Активизировать();
	//Подождать();
	ПолеОрганизация.Выбрать();
	ПолеОрганизация.ОжидатьФормированияВыпадающегоСписка();
	Подождать();
	ПолеОрганизация.ВыполнитьВыборИзСпискаВыбора("Андромеда ООО");

	ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.ПерейтиКСледующемуЭлементу();

	ПолеКомментарий = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Комментарий");
	ПолеКомментарий.Активизировать();

	Подождать();
	ПолеКомментарий.ВвестиТекст(ИмяДоговора);

	КнопкаЗаписать = ОкноПриложенияДоговорСозданиеФормаДоговорСоздание.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Записать");
	Подождать();
	КнопкаЗаписать.Нажать();
	
КонецПроцедуры

//Введена учетная политика
//@ВведенаУчетнаяПолитика()
Процедура ВведенаУчетнаяПолитика() Экспорт
	//	
КонецПроцедуры




Процедура УдалитьВсеДокументыПоАндромеде()

	ComСоединение = Контекст.ComСоединение;
	
	//удалим созданные предыдущими тестами прих накл - начало
	Запрос = ComСоединение.NewObject("Запрос");
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Организация.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Наименование", "Андромеда ООО");

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить("Удаляю документ " + ВыборкаДетальныеЗаписи.Ссылка.Номер + " от " + ВыборкаДетальныеЗаписи.Ссылка.Дата);
		КонтрагентОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		КонтрагентОбъект.Удалить();
	КонецЦикла;
	//удалим созданные предыдущими тестами прих накл - конец

КонецПроцедуры




Процедура СоздатьПрихНакл(ИмяДоговора,Сум)
	
	
	УдалитьВсеДокументыПоАндромеде();
	
	
	ГлавноеОкноТестКлиента = Контекст.ГлавноеОкноТестКлиента;
	ТестовоеПриложение  = Контекст.ТестируемоеПриложение;
	
	ГлавноеОкноТестКлиента.ВыполнитьКоманду("e1cib/list/Документ.ПоступлениеТоваровУслуг");
	
	ОкноПриложенияПоступлениеТоваровИУслуг = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Поступление товаров и услуг", , 30);
	ОкноПриложенияПоступлениеТоваровИУслугФормаПоступлениеТоваровИУслуг = ОкноПриложенияПоступлениеТоваровИУслуг.НайтиОбъект(Тип("ТестируемаяФорма"), "Поступление товаров и услуг");
	КнопкаТоварыПростаяФорма = ОкноПриложенияПоступлениеТоваровИУслугФормаПоступлениеТоваровИУслуг.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Товары (простая форма)");
	КнопкаТоварыПростаяФорма.Нажать();
	
	
	
	
	
	
	
	
	ОкноПриложенияПоступлениеТоваровИУслугСозданиеТовары = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Поступление товаров и услуг (создание) (Товары)", , 30);
	ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемаяФорма"), "Поступление товаров и услуг (создание) (Товары)");
	ПолеКонтрагент = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Контрагент");
	ПолеКонтрагент.Активизировать();

	ПолеКонтрагент.ВвестиТекст("тестовый Контрагент");

	ПолеКонтрагент.ОжидатьФормированияВыпадающегоСписка();

	ПолеКонтрагент.ВыполнитьВыборИзСпискаВыбора("тестовый Контрагент");

	ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.ПерейтиКСледующемуЭлементу();

	ПолеСчетНаОплату = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Счет на оплату");
	ПолеСчетНаОплату.Активизировать();

	ПолеОрганизация = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Организация");
	ПолеОрганизация.Активизировать();

	ПолеОрганизация.Выбрать();

	ПолеОрганизация.ОжидатьФормированияВыпадающегоСписка();

	ПолеОрганизация.ВыполнитьВыборИзСпискаВыбора("Андромеда ООО");

	ПолеДоговор = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Договор");
	ПолеДоговор.Активизировать();
	ПолеДоговор.ВвестиТекст(ИмяДоговора);
	ПолеДоговор.ОжидатьФормированияВыпадающегоСписка();
	ПолеДоговор.ВыполнитьВыборИзСпискаВыбора(ИмяДоговора);

	ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.ПерейтиКСледующемуЭлементу();

	ПолеСчетНаОплату = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Счет на оплату");
	ПолеСчетНаОплату.Активизировать();

	ПолеСклад = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Склад");
	ПолеСклад.Активизировать();

	ПолеСклад.ОжидатьФормированияВыпадающегоСписка();

	ПолеСклад.ВыполнитьВыборИзСпискаВыбора("Основной склад");

	
	
	
	
	
	
	
	
	
	ПолеЦеныИВалюта = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "ЦеныИВалюта");
	ПолеЦеныИВалюта.Активизировать();
	ПолеЦеныИВалюта.Нажать();
	
	ОкноПриложенияЦеныВДокументе = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Цены в документе", , 30);
	ОкноПриложенияЦеныВДокументеФормаЦеныВДокументе = ОкноПриложенияЦеныВДокументе.НайтиОбъект(Тип("ТестируемаяФорма"), "Цены в документе");
	ПолеНДС = ОкноПриложенияЦеныВДокументеФормаЦеныВДокументе.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "НДС");
	ПолеНДС.Активизировать();

	ПолеНДС.Выбрать();

	ПолеНДС.ОжидатьФормированияВыпадающегоСписка();

	ПолеНДС.ВыполнитьВыборИзСпискаВыбора("НДС в сумме");

	КнопкаОК = ОкноПриложенияЦеныВДокументеФормаЦеныВДокументе.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "ОК");
	КнопкаОК.Нажать();
	
	
	
	
	ТаблицаТовары = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Товары");
	КнопкаДобавить = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Добавить");
	КнопкаДобавить.Нажать();

	ПолеНоменклатура = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Номенклатура");
	ПолеНоменклатура.ВвестиТекст("Вентилятор BINATONE ALPINE 160вт");

	ПолеНоменклатура.ОжидатьФормированияВыпадающегоСписка();

	ПолеНоменклатура.ВыполнитьВыборИзСпискаВыбора("Вентилятор BINATONE ALPINE 160вт, напольный , (00-00000043)");

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеКоличество = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Количество");
	ПолеКоличество.Активизировать();

	ПолеКоличество.ВвестиТекст("1,000");

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеЦена = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Цена");
	ПолеЦена.Активизировать();

	ПолеЦена.ВвестиТекст("10,00");

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеСумма = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Сумма");
	ПолеСумма.Активизировать();

	ПромСум = СтрЗаменить(Строка(Сум),Символы.НПП,"");
	ПолеСумма.ВвестиТекст(ПромСум);

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеНДС = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "% НДС");
	ПолеНДС.Активизировать();

	ПолеНДС.Выбрать();

	ПолеНДС.ОжидатьФормированияВыпадающегоСписка();

	ПолеНДС.ВыполнитьВыборИзСпискаВыбора("18%");

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеНДС = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "НДС");
	ПолеНДС.Активизировать();

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеСчетУчета = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Счет учета");
	ПолеСчетУчета.Активизировать();

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеНомерГТД = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Номер ГТД");
	ПолеНомерГТД.Активизировать();

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеСтранаПроисхождения = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Страна происхождения");
	ПолеСтранаПроисхождения.Активизировать();

	ПолеСтранаПроисхождения.ВвестиТекст("австрал");

	ПолеСтранаПроисхождения.ОжидатьФормированияВыпадающегоСписка();

	ПолеСтранаПроисхождения.ВыполнитьВыборИзСпискаВыбора("АВСТРАЛИЯ (036)");

	ТаблицаТовары.ЗакончитьРедактированиеСтроки(false);

	ТаблицаТовары.ДобавитьСтроку();

	ПолеНоменклатура = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Номенклатура");
	ПолеНоменклатура.Активизировать();

	ТаблицаТовары.ЗакончитьРедактированиеСтроки(true);
	
	
	КнопкаПровестиИЗакрыть = ОкноПриложенияПоступлениеТоваровИУслугСозданиеТоварыФормаПоступлениеТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Провести и закрыть");
	КнопкаПровестиИЗакрыть.Нажать();
	
	
	//ВызватьИсключение "Тест!";

КонецПроцедуры



Процедура ТестовыйСценарий_СоздатьПродажу(ТестовоеПриложение,ИмяДоговора,Сум)

	ОкноПриложенияРеализацияТоваровИУслугКнопкаТоварыПростаяФормаНажать(ТестовоеПриложение);
	ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыКнопкаПровестиИЗакрытьНажать(ТестовоеПриложение,ИмяДоговора,Сум);

КонецПроцедуры

Процедура ОкноПриложенияРеализацияТоваровИУслугКнопкаТоварыПростаяФормаНажать(ТестовоеПриложение)
	ОкноПриложенияРеализацияТоваровИУслуг = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Реализация товаров и услуг", , 30);
	ОкноПриложенияРеализацияТоваровИУслугФормаРеализацияТоваровИУслуг = ОкноПриложенияРеализацияТоваровИУслуг.НайтиОбъект(Тип("ТестируемаяФорма"), "Реализация товаров и услуг");
	КнопкаТоварыПростаяФорма = ОкноПриложенияРеализацияТоваровИУслугФормаРеализацияТоваровИУслуг.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Товары (простая форма)");
	Подождать();
	КнопкаТоварыПростаяФорма.Нажать();

КонецПроцедуры

Процедура ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыКнопкаПровестиИЗакрытьНажать(ТестовоеПриложение,ИмяДоговора,Сум)

	ОкноПриложенияРеализацияТоваровИУслугСозданиеТовары = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Реализация товаров и услуг (создание) (Товары)", , 30);
	ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары = ОкноПриложенияРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемаяФорма"), "Реализация товаров и услуг (создание) (Товары)");
	ПолеКонтрагент = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Контрагент");
	ПолеКонтрагент.Активизировать();

	Подождать();
	ПолеКонтрагент.ВвестиТекст("тесто");

	ПолеКонтрагент.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ПолеКонтрагент.ВыполнитьВыборИзСпискаВыбора("тестовый Контрагент (00-000056)");

	ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.ПерейтиКСледующемуЭлементу();

	ПолеСчетНаОплату = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Счет на оплату");
	ПолеСчетНаОплату.Активизировать();

	ПолеОрганизация = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Организация");
	ПолеОрганизация.Активизировать();

	ПолеОрганизация.Выбрать();

	Подождать();
	ПолеОрганизация.ВвестиТекст("андро");

	ПолеОрганизация.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ПолеОрганизация.ВыполнитьВыборИзСпискаВыбора("Андромеда ООО (00-000002)");

	ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.ПерейтиКСледующемуЭлементу();

	ПолеСклад = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Склад");
	ПолеСклад.Активизировать();

	ПолеДоговор = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Договор");
	ПолеДоговор.Активизировать();

	Подождать();
	ПолеДоговор.ВвестиТекст(ИмяДоговора);

	ПолеДоговор.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ПолеДоговор.ВыполнитьВыборИзСпискаВыбора(ИмяДоговора);

	ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.ПерейтиКСледующемуЭлементу();

	ПолеСчетНаОплату = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Счет на оплату");
	ПолеСчетНаОплату.Активизировать();

	ПолеСклад = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Склад");
	ПолеСклад.Активизировать();

	Подождать();
	ПолеСклад.ВвестиТекст("осно");

	ПолеСклад.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ПолеСклад.ВыполнитьВыборИзСпискаВыбора("Основной склад (00-000005)");

	ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.ПерейтиКСледующемуЭлементу();

	ТаблицаТовары = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"), "Товары");
	ТаблицаТовары.Активизировать();

	КнопкаДобавить = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Добавить");
	Подождать();
	КнопкаДобавить.Нажать();

	ПолеНоменклатура = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Номенклатура");
	Подождать();
	ПолеНоменклатура.ВвестиТекст("Вентилятор BINATONE");

	ПолеНоменклатура.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ПолеНоменклатура.ВыполнитьВыборИзСпискаВыбора("Вентилятор BINATONE ALPINE 160вт, напольный , (00-00000043)");

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеКоличество = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Количество");
	Подождать();
	ПолеКоличество.Активизировать();

	Подождать();
	ПолеКоличество.ВвестиТекст("1,000");

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеЦена = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Цена");
	Подождать();
	ПолеЦена.Активизировать();

	Подождать();
	ПолеЦена.ВвестиТекст(Строка(Сум));

	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеСумма = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Сумма");
	Подождать();
	ПолеСумма.Активизировать();

	Подождать();
	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеСчетаУчета = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Счета учета");
	ПолеСчетаУчета.Активизировать();

	Подождать();
	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеНомерГТД = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Номер ГТД");
	ПолеНомерГТД.Активизировать();

	Подождать();
	ТаблицаТовары.ПерейтиКСледующемуЭлементу();

	ПолеСтранаПроисхождения = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Страна происхождения");
	ПолеСтранаПроисхождения.Активизировать();

	Подождать();
	ПолеСтранаПроисхождения.ВвестиТекст("австрал");

	ПолеСтранаПроисхождения.ОжидатьФормированияВыпадающегоСписка();

	Подождать();
	ПолеСтранаПроисхождения.ВыполнитьВыборИзСпискаВыбора("АВСТРАЛИЯ (036)");

	ТаблицаТовары.ЗакончитьРедактированиеСтроки(false);

	ТаблицаТовары.ДобавитьСтроку();

	ПолеНоменклатура = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемоеПолеФормы"), "Номенклатура");
	Подождать();
	ПолеНоменклатура.Активизировать();

	ТаблицаТовары.ЗакончитьРедактированиеСтроки(true);

	КнопкаПровестиИЗакрыть = ОкноПриложенияРеализацияТоваровИУслугСозданиеТоварыФормаРеализацияТоваровИУслугСозданиеТовары.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), "Провести и закрыть");
	КнопкаПровестиИЗакрыть.Нажать();

КонецПроцедуры

Процедура СоздатьПродажу(ИмяДоговора,Сум)
	ТестируемоеПриложение = Контекст.ТестируемоеПриложение;
	ГлавноеОкноТестКлиента = Контекст.ГлавноеОкноТестКлиента;
	
	ГлавноеОкноТестКлиента.ВыполнитьКоманду("e1cib/list/Документ.РеализацияТоваровУслуг");
	ТестовыйСценарий_СоздатьПродажу(ТестируемоеПриложение,ИмяДоговора,Сум);
	//ВызватьИсключение "Тест!";
КонецПроцедуры


//'тестовый Контрагент' имеет 2 покупки по 2 'тестовым договорам' на сумму 1000 и 300 рублей
//@ИмеетПокупкиПоНаСуммуИРублей(Парам01Строка,Парам02Число,Парам03Число,Парам04Строка,Парам05Число,Парам06Число)
Процедура ИмеетПокупкиПоНаСуммуИРублей(Парам01Строка,Парам02Число,Парам03Число,Парам04Строка,Сум1,Сум2) Экспорт
	
	УдалитьВсеДокументыПоАндромеде();

	
	СоздатьПродажу("тестовый договор Контрагента 1",Сум1);
	СоздатьПродажу("тестовый договор Контрагента 2",Сум2);
	
КонецПроцедуры

//фиксируется оплата по  'тестовому Контрагенту' на сумму 1100 рублей
//@ФиксируетсяОплатаПоНаСуммуРублей(Парам01Строка,Парам02Число)
Процедура ФиксируетсяОплатаПоНаСуммуРублей(Парам01Строка,Парам02Число) Экспорт
	
КонецПроцедуры

//формируется проводка по счету '62.01' по 'тестовый договор Контрагента 1' на сумму 1000
//@ФормируетсяПроводкаПоСчетуПоНаСумму(Парам01Строка,Парам02Строка,Парам03Число)
Процедура ФормируетсяПроводкаПоСчетуПоНаСумму(Парам01Строка,Парам02Строка,Парам03Число) Экспорт
	
КонецПроцедуры

//на счете '62.01' по  'тестовый договор Контрагента 2'  остается долг в размере 200 рублей
//@НаСчетеПоОстаетсяДолгВРазмереРублей(Парам01Строка,Парам02Строка,Парам03Число)
Процедура НаСчетеПоОстаетсяДолгВРазмереРублей(Парам01Строка,Парам02Строка,Парам03Число) Экспорт
	
КонецПроцедуры
