//начало текста модуля

#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"РежимЗапускаПриложения(Парам01)","РежимЗапускаПриложения","Тогда режим запуска приложения ""ТолстыйКлиентУправляемоеПриложение""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	ОчиститьЖР();
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОчиститьЖР()
	Отбор = Новый Структура;
	Отбор.Вставить("Событие", "_$Session$_.Start");
	ОчиститьЖурналРегистрации(Отбор);
КонецПроцедуры

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Тогда режим запуска приложения "ТолстыйКлиентУправляемоеПриложение"
//@РежимЗапускаПриложения(Парам01)
Процедура РежимЗапускаПриложения(Парам01) Экспорт

	ТипЗапуска = ПолучитьТипЗапускаПриложения();

	Если ТипЗапуска <> Парам01 Тогда
		ВызватьИсключение "Запускт приложения не соответствует указанному <" + Парам01 + ">";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТипЗапускаПриложения()

	ВыгрузкаЖР = Новый ТаблицаЗначений;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Событие", "_$Session$_.Start");
	ВыгрузитьЖурналРегистрации(ВыгрузкаЖР, Отбор);
	
	Если ВыгрузкаЖР.Количество() = 1 Тогда
		Возврат ВыгрузкаЖР[0].ПредставлениеПриложения;
	КонецЕсли;

	Возврат Ложь;
	
КонецФункции // ПолучитьТипЗапускаПриложения()

//окончание текста модуля